generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String   @unique
    password String
    role     UserRole @default(USER)
    verified DateTime

    provider   String?
    providerId String?

    cart             Cart?
    order            Order[]
    verificationCode VerificationCode?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id   Int    @id @default(autoincrement())
    name String @unique

    product Product[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String
    price    Int

    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int
    Brand      Brand?   @relation(fields: [brandId], references: [id])
    brandId    Int?

    CartItem CartItem[]

    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @updatedAt
    TypeProduct   TypeProduct? @relation(fields: [typeProductId], references: [id])
    typeProductId Int?
}

model Brand {
    id      Int       @id @default(autoincrement())
    name    String    @unique
    product Product[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model TypeProduct {
    id        Int       @id @default(autoincrement())
    name      String    @unique
    product   Product[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Cart {
    id          Int    @id @default(autoincrement())
    token       String
    totalAmount Int    @default(0)

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    CartItem CartItem[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    product   Product @relation(fields: [productId], references: [id])
    productId Int
    Cart      Cart    @relation(fields: [cartId], references: [id])
    cartId    Int

    quantity Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    items Json

    fullName String
    address  String
    email    String
    phone    String
    comment  String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String

    createdAt DateTime @default(now())
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    USER
    ADMIN
}
